ncverilog: 15.20-s039: (c) Copyright 1995-2017 Cadence Design Systems, Inc.
TOOL:	ncverilog	15.20-s039: Started on Feb 24, 2022 at 00:00:39 CST
ncverilog
	tb_term.sv
	SME.v
	+access+r
Recompiling... reason: file './SME.v' is newer than expected.
	expected: Wed Feb 23 23:58:23 2022
	actual:   Thu Feb 24 00:00:37 2022
file: SME.v
	module worklib.SME:v
		errors: 0, warnings: 0
		Caching library 'worklib' ....... Done
	Elaborating the design hierarchy:
ncelab: *W,DSEMEL: This SystemVerilog design will be simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
	Building instance overlay tables: .................... Done
	Generating native compiled code:
		worklib.SME:v <0x64680536>
			streams:  25, words: 15919
	Building instance specific data structures.
	Loading native compiled code:     .................... Done
	Design hierarchy summary:
		                  Instances  Unique
		Modules:                  2       2
		Registers:               45      45
		Scalar wires:             7       -
		Vectored wires:           2       -
		Always blocks:           20      20
		Initial blocks:          10      10
		Cont. assignments:        0       1
		Pseudo assignments:       1       1
		Compilation units:        1       1
		Simulation timescale:  10ps
	Writing initial simulation snapshot: worklib.testfixture:sv
Loading snapshot worklib.testfixture:sv .................... Done
ncsim: *W,DSEM2009: This SystemVerilog design is simulated as per IEEE 1800-2009 SystemVerilog simulation semantics. Use -disable_sem2009 option for turning off SV 2009 simulation semantics.
*Verdi* Loading libsscore_ius152.so
ncsim> source /usr/cad/cadence/INCISIV/cur/tools/inca/files/ncsimrc
ncsim> run
FSDB Dumper for IUS, Release Verdi_Q-2020.03, Linux, 02/09/2020
(C) 1996 - 2020 by Synopsys, Inc.
*Verdi* FSDB WARNING: The FSDB file already exists. Overwriting the FSDB file may crash the programs that are using this file.
*Verdi* : Create FSDB file 'SME.fsdb'
*Verdi* : Begin traversing the scopes, layer (0).
*Verdi* : End of traversing.
*Verdi* : Begin traversing the MDAs, layer (0).
*Verdi* : Enable +mda and +packedmda dumping.
*Verdi* : End of traversing the MDAs.
----------------------
-- Simulation Start --
----------------------
  __________________________________________________________
  == String 1  "abcdijk lmnop q rstuv"
  -- Pattern 1  "1234"
       cycle 3c, expect(0,00) , get(0,00) >> Pass
  -- Pattern 2  "abcd"
       cycle 46, expect(1,00) , get(1,00) >> Pass
  -- Pattern 3  "dijk"
       cycle 53, expect(1,03) , get(1,03) >> Pass
  -- Pattern 4  "pqrst"
       cycle 78, expect(0,00) , get(0,03) >> Pass
  -- Pattern 5  "pqr.t"
       cycle 9d, expect(0,00) , get(0,03) >> Pass
  -- Pattern 6  "c...k"
       cycle ab, expect(1,02) , get(1,02) >> Pass
  -- Pattern 7  "^lmno"
       cycle c1, expect(1,08) , get(1,08) >> Pass
  -- Pattern 8  "rstuv$"
       cycle df, expect(1,10) , get(1,10) >> Pass
  -- Pattern 9  "^rmn"
       cycle 10d, expect(0,00) , get(0,10) >> Pass
  -- Pattern a  "ijk l$"
       cycle 136, expect(0,00) , get(0,04) >> Pass
  -- Pattern b  "v"
       cycle 14e, expect(1,14) , get(1,14) >> Pass
  -- Pattern c  "lmnoprst"
       cycle 177, expect(0,00) , get(0,14) >> Pass
  -- Pattern d  "^ijk$"
       cycle 1a4, expect(0,00) , get(0,14) >> Pass
  -- Pattern e  "^q$"
       cycle 1be, expect(1,0e) , get(1,0e) >> Pass
  __________________________________________________________
  == String 2  "2x1=2 2x2=4 2x3=6"
  -- Pattern 1  "^2.2.2"
       cycle 204, expect(0,00) , get(0,06) >> Pass
  -- Pattern 2  "2.2.2"
       cycle 217, expect(1,04) , get(1,04) >> Pass
  -- Pattern 3  "^2.2.4$"
       cycle 231, expect(1,06) , get(1,06) >> Pass
  -- Pattern 4  "."
       cycle 235, expect(1,00) , get(1,00) >> Pass
  -- Pattern 5  "^.."
       cycle 23d, expect(1,00) , get(1,00) >> Pass
  -- Pattern 6  "^.$"
       cycle 26f, expect(0,00) , get(0,16) >> Pass
  -- Pattern 7  "2.$"
       cycle 2a1, expect(0,00) , get(0,0c) >> Pass
  -- Pattern 8  "2x4=7"
       cycle 2d1, expect(0,00) , get(0,0c) >> Pass
  -- Pattern 9  "3=6-3"
       cycle 2f8, expect(0,00) , get(0,0c) >> Pass
  -- Pattern a  "1.2=2"
       cycle 31f, expect(0,00) , get(0,0c) >> Pass
  -- Pattern b  "2*2=4"
       cycle 33b, expect(1,00) , get(1,[1;31m06[0m) >> Wrong index
  __________________________________________________________
  == String 3  "She sees cheese"
  -- Pattern 1  "ees."
       cycle 35b, expect(1,05) , get(1,05) >> Pass
  -- Pattern 2  "ees.$"
       cycle 37b, expect(1,0b) , get(1,0b) >> Pass
  -- Pattern 3  "e..se"
       cycle 3b6, expect(0,00) , get(0,0b) >> Pass
  -- Pattern 4  "e..ee$"
       cycle 3f4, expect(0,00) , get(0,02) >> Pass
  -- Pattern 5  "^ees*"
       cycle 423, expect(0,00) , get(0,02) >> Pass
  -- Pattern 6  "hee*se"
       cycle 454, expect(1,0a) , get(1,0a) >> Pass
  -- Pattern 7  "he.s"
       cycle 45f, expect(1,01) , get(1,01) >> Pass
  -- Pattern 8  "*see$"
       cycle 482, expect(0,00) , get(0,01) >> Pass
  -- Pattern 9  "se*ce"
       cycle 4cc, expect(0,00) , get(0,0d) >> Pass
  __________________________________________________________
  == String 4  "But she said the butter's bitter"
  -- Pattern 1  "sa*said"
       cycle 525, expect(0,00) , get(0,0d) >> Pass
  -- Pattern 2  "b*tter"
       cycle 544, expect(1,11) , get(1,11) >> Pass
  -- Pattern 3  "b*tter$"
       cycle 56e, expect(1,11) , get([1;31m0,11[0m) >> Fail
  -- Pattern 4  "ut*r"
       cycle 58b, expect(1,01) , get(1,01) >> Pass
  -- Pattern 5  "ut*tted"
       cycle 5ca, expect(0,00) , get(0,12) >> Pass
  -- Pattern 6  "^ut*tter"
       cycle 5f7, expect(0,00) , get(0,12) >> Pass
  -- Pattern 7  "*tered"
       cycle 61a, expect(0,00) , get(0,12) >> Pass
  __________________________________________________________
  == String 5  "He threw three free throws"
  -- Pattern 1  "thr*the$"
       cycle 678, expect(0,00) , get(0,12) >> Pass
  -- Pattern 2  "^thro*th"
--------------------------------------------------
-- Failed waiting valid signal, Simulation STOP --
--------------------------------------------------
Simulation complete via $finish(1) at time 20000010 NS + 0
./tb_term.sv:70         $finish;
ncsim> exit
TOOL:	ncverilog	15.20-s039: Exiting on Feb 24, 2022 at 00:00:43 CST  (total: 00:00:04)
